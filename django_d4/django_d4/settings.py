"""
Django settings for django_d4 project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from config import email_host_password

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uok4fjhww0tka@5_sv5=8*460t8hr6$y%&z2+$!6u2baj$r1(t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'modeltranslation',  # обязательно впишите его перед админом
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'simpleapp',
    'django_filters',
    'accounts',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',
    'django_apscheduler',

]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.locale.LocaleMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'simpleapp.middlewares.TimezoneMiddleware',



    # 'django.middleware.cache.UpdateCacheMiddleware',
    # 'django.middleware.common.CommonMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'django_d4.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_d4.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'ru'  #'ru' 'en-us'

LANGUAGES = [
    ('en-us', 'English'),
    ('ru', 'Русский'),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
# ----------------
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

LOGIN_REDIRECT_URL = "/products"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# Указали форму для дополнительной обработки регистрации пользователя
ACCOUNT_FORMS = {"signup": "accounts.forms.CustomSignupForm"}

# Настройка почты
# "django.core.mail.backends.smtp.EmailBackend - console"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = "si-mart"
EMAIL_HOST_PASSWORD = email_host_password
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = "si-mart@yandex.ru"
EMAIL_SUBJECT_PREFIX = "DORATY : "

ADMINS = [("AdminSi", "si-mart@yandex.ru")]
SERVER_EMAIL = "si-mart@yandex.ru"
MANAGERS = (
    ('Ivan', 'feronts@mail.ru'),
    ('Petr', 'matveykey@mail.ru'),
)
# Celory Веб
# redis://default:47PifD0CqCN5DyOyDP32pWbItetYBwnD@redis-11393.c304.europe-west1-2.gce.cloud.redislabs.com:11393
# CELERY_BROKER_URL = ('redis://default:47PifD0CqCN5DyOyDP32pWbItetYBwnD@redis'
#                      '-11393.c304.europe-west1-2.gce.cloud.redislabs.com:11393v')
# CELERY_RESULT_BACKEND = ('redis://default:47PifD0CqCN5DyOyDP32pWbItetYBwnD@redis-11393.c304.europe-west1-2.gce.cloud.redislabs.com:11393')
# CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'

CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CACHES = {
    'default': {
        # 'TIMEOUT': 60, # добавляем стандартное время ожидания в минуту
        # (по умолчанию это 5 минут — 300 секунд)
        'BACKEND':
            'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files')  # Указываем, куда
        # будем сохранять кэшируемые файлы! Не забываем создать папку
        # cache_files внутри папки с manage.py!
    }
}

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'loggers': {
#         'django': {
#             'handlers': ['email', 'simpleapp'],
#             'level': 'INFO',
#         }
#     },
#     'handlers': {
#         # 'console': {
#         #     'class': 'logging.StreamHandler'
#         # },
#         'simpleapp': {
#             'level': 'INFO',
#             'class': 'logging.FileHandler',
#             'filename': 'debug.log',
#             'formatter': 'myformatter',
#             # 'filters': ['require_debug_false'],
#         },
#         'email': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             # 'include_html': True,
#             'formatter': 'myformatter',
#         }
#     },
#     'formatters': {
#         'myformatter': {
#             'format': '{levelname} {asctime} {message}',
#             'datetime': '%m.%d %H:%M',
#             'style': '{',
#         }
#     },
#     'filters': {
#         'require_debug_false': {
#             '()': "django.utils.log.RequireDebugFalse",
#         }
#     }
# }
